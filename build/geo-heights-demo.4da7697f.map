{"version":3,"sources":["map.js","functions.js","index.js"],"names":["google","L","tileLayer","id","osm","map","Map","center","zoom","layers","baseLayers","control","undefined","position","collapsed","addTo","featureGroup","FeatureGroup","drawControl","Control","Draw","draw","polygon","icon","DivIcon","iconSize","Point","className","rectangle","polyline","circle","marker","circlemarker","edit","drawControlRemove","addControl","osmb","OSMBuildings","style","color","roofColor","shadows","exports","featuresListToCollection","list","polygonsWithInPolygon","polygons","withInPolygon","reduce","result","nextPolygon","coordinates","geometry","properties","turf","booleanWithin","push","findFeatureById","features","find","feature","console","log","fs","require","rawdata","mytishi","JSON","parse","setWithInBuildings","click","e","json","content","height","iou","popup","maxHeight","autoPanPaddingTopLeft","setLatLng","latLng","lat","lon","setContent","openOn","on","Event","CREATED","event","layer","toGeoJSON","set","error","Util","setOptions","interactive","fill","addLayer","remove","DELETED","getLayers","length"],"mappings":"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","file":"geo-heights-demo.4da7697f.map","sourceRoot":"..","sourcesContent":["'use strict';\nvar google = L.tileLayer('http://mt0.google.com/vt/lyrs=s&hl=en&x={x}&y={y}&z={z}&s=Ga', { id: 1 }),\n    osm = L.tileLayer('http://a.tile.openstreetmap.org/{z}/{x}/{y}.png', { id: 2 }),\n    map = new L.Map('map', {\n        center: [55.87835875564509, 37.7050219952363],\n        zoom: 16,\n        layers: [google]\n    });\n\nvar baseLayers = {\n    \"Google\": google,\n    \"OSM\": osm\n}\nL.control.layers(baseLayers, undefined, { position: 'topright', collapsed: false }).addTo(map);\n\nvar featureGroup = new L.FeatureGroup().addTo(map),\n    drawControl = new L.Control.Draw({\n        draw: {\n            polygon: {\n                icon: new L.DivIcon({\n                    iconSize: new L.Point(7, 7),\n                    className: 'point'\n                })\n            },\n            rectangle: false,\n            polyline: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n        },\n        edit: false\n    }),\n    drawControlRemove = new L.Control.Draw({\n        draw: false,\n        edit: {\n            edit: false,\n            featureGroup\n        }\n    });\nmap.addControl(drawControl);\n\nvar osmb = new OSMBuildings(map);\nosmb.style({\n    color: '#deebf4',\n    roofColor: '#828886',\n    shadows: true\n});\n\nexports.map = map;\nexports.osmb = osmb;\nexports.featureGroup = featureGroup;\nexports.drawControl = drawControl;\nexports.drawControlRemove = drawControlRemove;","exports.featuresListToCollection = (list) => ({\n    \"type\": \"FeatureCollection\",\n    \"features\": list\n});\n\nexports.polygonsWithInPolygon = (polygons, withInPolygon) => (\n    polygons.reduce((result, nextPolygon) => {\n        let { geometry: { coordinates }, properties, id } = nextPolygon\n        // use coordinates[0] because booleanWithin doesn't accept MultiPolygon\n        let polygon = turf.polygon(coordinates[0], properties, { id })\n        if (turf.booleanWithin(polygon, withInPolygon)) {\n            result.push(polygon);\n        }\n        return result\n    }, [])\n);\n\nexports.findFeatureById = (features, id) => (\n    features.find(feature => feature.id === id)\n)","'use strict';\nconsole.log('Hell world!');\n\nimport {\n    map,\n    osmb,\n    featureGroup,\n    drawControl,\n    drawControlRemove\n} from './map';\n// import { osmb } from './map';\nimport {\n    findFeatureById,\n    polygonsWithInPolygon,\n    featuresListToCollection\n} from './functions';\n\nconst fs = require('fs');\nvar rawdata = fs.readFileSync('./data/mytishi.geojson', 'utf8'),\n    mytishi = JSON.parse(rawdata);\n\n// osmb.set(\n//     featuresListToCollection(mytishi)\n// );\n\nvar setWithInBuildings = function (polygon) {\n\n}\n\nosmb.click(function (e) {\n    console.log(e);\n    var json = findFeatureById(mytishi, e.feature);\n    var content = '<b>FEATURE ID ' + e.feature + '</b>';\n    content += '<br><em>Height</em> ' + json.properties.height;\n    content += '<br><em>IOU</em> ' + json.properties.iou;\n    L.popup({ maxHeight: 200, autoPanPaddingTopLeft: [50, 50] })\n        .setLatLng(L.latLng(e.lat, e.lon))\n        .setContent(content)\n        .openOn(map);\n});\n\nmap.on(L.Draw.Event.CREATED, function (event) {\n    var layer = event.layer;\n\n    try {\n        var withInPolygon = layer.toGeoJSON()\n        var polygons = polygonsWithInPolygon(\n            mytishi,\n            withInPolygon\n        );\n        osmb.set(\n            featuresListToCollection(polygons)\n        )\n    } catch (error) {\n        console.log(error);\n    }\n\n\n    L.Util.setOptions(layer, { interactive: true, fill: false });\n    featureGroup.addLayer(layer);\n    drawControl.remove();\n    drawControlRemove.addTo(map);\n});\nmap.on(L.Draw.Event.DELETED, function (event) {\n    var layers = event.layers;\n    osmb.set();\n    if (layers && layers.getLayers().length > 0) {\n        drawControlRemove.remove();\n        drawControl.addTo(map);\n    }\n});"]}