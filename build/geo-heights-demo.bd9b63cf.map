{"version":3,"sources":["map.js","functions.js","index.js"],"names":["google","L","tileLayer","id","osm","map","Map","center","zoom","layers","baseLayers","control","undefined","position","collapsed","addTo","featureGroup","FeatureGroup","drawControl","Control","Draw","draw","polygon","icon","DivIcon","iconSize","Point","className","rectangle","polyline","circle","marker","circlemarker","edit","drawControlRemove","addControl","osmb","OSMBuildings","style","color","roofColor","shadows","exports","featuresListToCollection","list","polygonsWithInPolygon","polygons","withInPolygon","reduce","result","nextPolygon","coordinates","geometry","properties","turf","booleanWithin","push","findFeatureById","features","find","feature","console","log","colors","house","material","roofMaterial","other","apartments","fs","require","rawdata","mytishi","JSON","parse","setWithInBuildings","click","e","json","content","type","building_height","iou","popup","maxHeight","autoPanPaddingTopLeft","setLatLng","latLng","lat","lon","setContent","openOn","each","height","Object","assign","on","Event","CREATED","event","layer","toGeoJSON","set","error","Util","setOptions","interactive","fill","addLayer","remove","DELETED","getLayers","length"],"mappings":";AAAA;;ACAA0C,ADCA,IAAI1C,ICDI2C,KDCK1C,EAAEC,SAAF,CAAY,OCDzB,GAAmC,UAAC0C,IAAD,sCDCtB,EAA4E,EAAEzC,IAAI,CAAN,EAA5E,CAAb;ACDmC,ADCnC,IACIC,MAAMH,CCFoC,CDElCC,SAAF,CAAY,iDAAZ,EAA+D,EAAEC,IAAI,CAAN,EAA/D,CADV;ACAI,ADAJ,IAEIE,MAAM,IAAIJ,ECFF,ADEIK,GAAN,CAAU,KAAV,EAAiB,QCHmB;AAE1C,ADEIC,YAAQ,CAAC,OCFDqC,UDEA,EAAoB,gBAApB,CADW;ACHmB,ACA9C,AFKQpC,KCL2B,KDKrB,EAFa;ACHQ,ADM3BC,CCNR,WDMgB,CAACT,MAAD;AEHhB,AFA2B,CAAjB,CAFV;ACIA0C,QAAQG,qBAAR,GAAgC,UAACC,QAAD,EAAWC,aAAX;AAAA,ACKhC,AFDA,IAAIrC,OCHAoC,MDGa,GCHJE,MAAT,CAAgB,UAACC,MAAD,EAASC,WAAT,EAAyB;AAAA,ADIzC,YCHsBC,EDGZnD,MADG,GCH4B,GACekD,WADf,CAC/BE,QAD+B,CACnBD,WADmB;AAAA,ACL7CU,AFUI,QEVIC,GAAR,AFUW1D,CCJ8BiD,ACN7B,UDKiC,GACeH,ACN5D,WDK6C,CACJG,UADI;AAAA,ADG5B,CAAjB,WCFqDlD,EADR,GACe+C,WADf,CACQ/C,EADR;AAErC,ACQR,AFHAF,EAAEU,EEGEoD,KFHJ,CAAUtD,GEGG,GFHb,CAAiBC,UAAjB,EAA6BE,SAA7B,EAAwC,EAAEC,UAAU,UAAZ,EAAwBC,WAAW,KAAnC,EAAxC,EAAoFC,KAApF,CAA0FV,GAA1F;AEII2D,WAAO,EAAEC,UAAU,MAAZ,EAAoBC,cAAc,WAAlC,EADE;ADPL,ACSJC,AFHJ,IAAInD,OEGO,CDTCM,CCSC2C,MFHM,GCNGX,CCSC,AFHArD,EAAEgB,ECNEK,GCShB,EAAqB4C,EDTV,CAAaf,EDMhB,GAAqBpC,KAArB,CEG2B,AFHAV,CCNC,CAAZ,CAAb,ADMH,CAAnB,CCNmDgD,ECSxC,EAFE,MDPS,EAAyC,EAAElD,MAAF,EAAzC,CAAd;AACA,ACSJiE,AFJJ,IACIlD,QCNQoC,ICSI,CDTCC,CCSCU,AFHA,IAAIhE,EAAEkB,IEGI,EDThB,CAAmBG,ADMT,CAAUF,GEGhB,CFHE,CEGmB8C,AFHA,CCNzB,EAA4BnB,WCSW,EDTvC,CAAJ,EAAgD,KCSxC;ADRJE,ACKC,AFCL5B,CEDR,SFCc,SCNKmC,IAAP,CAAYlC,OAAZ;AACH,ADMGA,iBAAS;ACLb,ACSR,AFHgBC,IEGV8C,KAAKC,MDTIrB,ECSI,CFHG,GCNd,ACSG,CAAX,AFH0BhD,EAAEuB,OAAN,CAAc;ACL/B,ACSL,AFHoBC,IEGhB8C,CDjBA,EAQG,EARH,CAD4B,gBDeF,IAAItE,EAAEyB,KAAN,CAAY,CAAZ,EAAe,CAAf,CADM,60zuwBEIpC;ADlBgC,ACkBhC,AFFoBC,CChBpB,GCmBI6C,UAAUC,KAAKC,KAAL,CAAWH,EFHM,KEGjB,CADd;AFJoC,aAAd;ACFtB7B,ACSA,AFRqB,IEQjBiC,IDTIlB,CDAM,cCAd,ECSyB,CDTC,QCStBkB,EDTuBjB,QAAD,EAAWvD,EAAX,ICSD,CAAUmB,OAAV,EAAmB,CAE3C,CAFD;ADT0B,ADOdM,WCNR8B,QDMmB,CCNVC,IAAT,ADDU,CCCI;AAAA,ACYlBvB,AFLYP,UEKP+C,KDZwBhB,ACY7B,CAAW,EFLW,KCPezD,ADDvB,ECCe,CCYR0E,CAAV,EAAa,CDZoB1E,EAA1B;AAAA,ACad0D,AFLQ/B,KCRR,CADsB,MCcdgC,GAAR,CAAYe,AFLI,CEKhB,IFdU;ACAY,ACetB,AFLQ9C,CCVZ,OCeQ+C,OAAO,CFLK,KAVN,0BEeiBN,OAAhB,EAAyBK,EAAEjB,OAA3B,CAAX;AACA,AFLQ5B,QEKJ+C,UAAU,IFLQ,eEKWF,EAAEjB,OAArB,GAA+B,MAA7C;AACAmB,AFjBU,KADuB,UEkBtB,uBAAuBD,KAAKzB,UAAL,CAAgB2B,IAAlD;AACAD,AFLI9C,UAAM,KEKC,yBAAyB6C,KAAKzB,UAAL,CAAgB4B,eAApD;AACAF,AFpBiC,CAAnB,CADlB,aEqBe,sBAAsBD,KAAKzB,UAAL,CAAgB6B,GAAjD;AACAjF,AFtBJ,IAiBIiC,EEKEiD,KAAF,CAAQ,EAAEC,UFLU,CEKC,GAAb,AFLgBnF,EEKEoF,AFLAlE,OAAF,CAAUC,IAAd,CAAmB,UEKU,CAAC,EAAD,EAAK,EAAL,CAAzC,EAAR,EACKkE,SADL,CACerF,EAAEsF,MAAF,CAASV,EAAEW,GAAX,EAAgBX,EAAEY,GAAlB,CADf,EAEKC,UAFL,CAEgBX,OAFhB,EAGKY,MAHL,CAGYtF,QAHZ;AAIH,AFROgB,CEHR,SFGc,KAD6B;AAEnCY,UAAM;AESdG,AFRYH,UEQP2D,IAAL,AFRkB,CEQR,IFTI,MESMhC,OAAV,EAAmB;AAAA,AFPjB5C,8BEQgC4C,QAAQP,UADvB;AAAA,AFTf,QEUJ2B,IADmB,uBACnBA,IADmB;AAAA,AFXc,CAAnB,CAjBxB,ME6BiCa,MADJ,uBACbZ,eADa;AFJ7B5E,IAAI8B,UAAJ,CAAejB,WAAf;AEMI,QAAI8D,IAAJ,EAAU;AAAA,AFJd,IAAI5C,OAAO,IAAIC,YEK0B0B,AFL9B,CAAiB1D,GAAjB,CAAX,EEKgD2E,IAAP,CAD3B;AAAA,AFHd5C,KAAKE,KAAL,CAAW,CEIG2B,QADA,gBACAA,QADA;AAAA,AFFV1B,WAAO,CEGa2B,QFJb,IEGG,gBACUA,YADV;AFDV1B,eAAW,SAFJ;AEKHsD,AFFJrD,aAAS,EEEEsD,MAAP,CAAcnC,OAAd,EAAuB;AACnBP,AFND,CAAX,uBEMwB;AACRwC,8BADQ;AAER5B,AFFhBvB,QAAQrC,GAAR,GAAcA,GAAd,iBEAwB;AAGR6D,AFFhBxB,QAAQN,IAAR,GAAeA,IAAf;AEDwB,AFExBM,QAAQ1B,YAAR,GAAuBA,YAAvB;AEH+B,AFI/B0B,QAAQxB,CEJA,UFIR,GAAsBA,WAAtB;AEGK,AFFLwB,QAAQR,iBAAR,GAA4BA,iBAA5B;AEGC,CAZD;;AAcA7B,SAAI2F,EAAJ,CAAO/F,EAAEmB,IAAF,CAAO6E,KAAP,CAAaC,OAApB,EAA6B,UAAUC,KAAV,EAAiB;AAC1C,QAAIC,QAAQD,MAAMC,KAAlB;;AAEA,QAAI;AACA,YAAIrD,gBAAgBqD,MAAMC,SAAN,EAApB;AACA,YAAIvD,WAAW,sCACX0B,OADW,EAEXzB,aAFW,CAAf;AAIAX,kBAAKkE,GAAL,CACI,yCAAyBxD,QAAzB,CADJ;AAGH,KATD,CASE,OAAOyD,KAAP,EAAc;AACZ1C,gBAAQC,GAAR,CAAYyC,KAAZ;AACH;;AAGDtG,MAAEuG,IAAF,CAAOC,UAAP,CAAkBL,KAAlB,EAAyB,EAAEM,aAAa,IAAf,EAAqBC,MAAM,KAA3B,EAAzB;AACA3F,sBAAa4F,QAAb,CAAsBR,KAAtB;AACAlF,qBAAY2F,MAAZ;AACA3E,2BAAkBnB,KAAlB,CAAwBV,QAAxB;AACH,CArBD;AAsBAA,SAAI2F,EAAJ,CAAO/F,EAAEmB,IAAF,CAAO6E,KAAP,CAAaa,OAApB,EAA6B,UAAUX,KAAV,EAAiB;AAC1C,QAAI1F,SAAS0F,MAAM1F,MAAnB;AACA2B,cAAKkE,GAAL;AACA,QAAI7F,UAAUA,OAAOsG,SAAP,GAAmBC,MAAnB,GAA4B,CAA1C,EAA6C;AACzC9E,+BAAkB2E,MAAlB;AACA3F,yBAAYH,KAAZ,CAAkBV,QAAlB;AACH;AACJ,CAPD","file":"geo-heights-demo.bd9b63cf.map","sourceRoot":"..","sourcesContent":["'use strict';\nvar google = L.tileLayer('http://mt0.google.com/vt/lyrs=s&hl=en&x={x}&y={y}&z={z}&s=Ga', { id: 1 }),\n    osm = L.tileLayer('http://a.tile.openstreetmap.org/{z}/{x}/{y}.png', { id: 2 }),\n    map = new L.Map('map', {\n        center: [55.87835875564509, 37.7050219952363],\n        zoom: 16,\n        layers: [google]\n    });\n\nvar baseLayers = {\n    \"Google\": google,\n    \"OSM\": osm\n}\nL.control.layers(baseLayers, undefined, { position: 'topright', collapsed: false }).addTo(map);\n\nvar featureGroup = new L.FeatureGroup().addTo(map),\n    drawControl = new L.Control.Draw({\n        draw: {\n            polygon: {\n                icon: new L.DivIcon({\n                    iconSize: new L.Point(7, 7),\n                    className: 'point'\n                })\n            },\n            rectangle: false,\n            polyline: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n        },\n        edit: false\n    }),\n    drawControlRemove = new L.Control.Draw({\n        draw: false,\n        edit: {\n            edit: false,\n            featureGroup\n        }\n    });\nmap.addControl(drawControl);\n\nvar osmb = new OSMBuildings(map);\nosmb.style({\n    color: '#deebf4',\n    roofColor: '#828886',\n    shadows: true\n});\n\nexports.map = map;\nexports.osmb = osmb;\nexports.featureGroup = featureGroup;\nexports.drawControl = drawControl;\nexports.drawControlRemove = drawControlRemove;","exports.featuresListToCollection = (list) => ({\n    \"type\": \"FeatureCollection\",\n    \"features\": list\n});\n\nexports.polygonsWithInPolygon = (polygons, withInPolygon) => (\n    polygons.reduce((result, nextPolygon) => {\n        let { geometry: { coordinates }, properties, id } = nextPolygon\n        // use coordinates[0] because booleanWithin doesn't accept MultiPolygon\n        let polygon = turf.polygon(coordinates[0], properties, { id })\n        if (turf.booleanWithin(polygon, withInPolygon)) {\n            result.push(polygon);\n        }\n        return result\n    }, [])\n);\n\nexports.findFeatureById = (features, id) => (\n    features.find(feature => feature.id === id)\n)","'use strict';\nconsole.log('Hell world!');\n\nimport {\n    map,\n    osmb,\n    featureGroup,\n    drawControl,\n    drawControlRemove\n} from './map';\nimport {\n    findFeatureById,\n    polygonsWithInPolygon,\n    featuresListToCollection\n} from './functions';\n\nvar colors = {\n    house: { material: \"цщщв\", roofMaterial: \"tar_paper\" },\n    other: { material: \"brick\", roofMaterial: \"stone\" },\n    apartments: { material: \"panel\", roofMaterial: \"concrete\" }\n}\n\nconst fs = require('fs');\nvar rawdata = fs.readFileSync('./data/mytishi.geojson', 'utf8'),\n    mytishi = JSON.parse(rawdata);\n\nvar setWithInBuildings = function (polygon) {\n\n}\n\nosmb.click(function (e) {\n    console.log(e);\n    var json = findFeatureById(mytishi, e.feature);\n    var content = '<b>FEATURE ID ' + e.feature + '</b>';\n    content += '<br><em>Type</em> ' + json.properties.type;\n    content += '<br><em>Height</em> ' + json.properties.building_height;\n    content += '<br><em>IOU</em> ' + json.properties.iou;\n    L.popup({ maxHeight: 200, autoPanPaddingTopLeft: [50, 50] })\n        .setLatLng(L.latLng(e.lat, e.lon))\n        .setContent(content)\n        .openOn(map);\n});\n\nosmb.each(function (feature) {\n    let { type, building_height: height } = feature.properties;\n    if (type) {\n        let { material, roofMaterial } = colors[type];\n        Object.assign(feature, {\n            properties: {\n                height,\n                material,\n                roofMaterial\n            }\n        });\n    };\n})\n\nmap.on(L.Draw.Event.CREATED, function (event) {\n    var layer = event.layer;\n\n    try {\n        var withInPolygon = layer.toGeoJSON()\n        var polygons = polygonsWithInPolygon(\n            mytishi,\n            withInPolygon\n        );\n        osmb.set(\n            featuresListToCollection(polygons)\n        )\n    } catch (error) {\n        console.log(error);\n    }\n\n\n    L.Util.setOptions(layer, { interactive: true, fill: false });\n    featureGroup.addLayer(layer);\n    drawControl.remove();\n    drawControlRemove.addTo(map);\n});\nmap.on(L.Draw.Event.DELETED, function (event) {\n    var layers = event.layers;\n    osmb.set();\n    if (layers && layers.getLayers().length > 0) {\n        drawControlRemove.remove();\n        drawControl.addTo(map);\n    }\n});"]}